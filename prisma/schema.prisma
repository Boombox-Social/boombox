// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  SMM
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  role      UserRole  @default(SMM)
  avatar    String? // Profile picture URL
  isActive  Boolean   @default(true)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  clients        Client[] // Clients assigned to this user (for SMM role)
  createdClients Client[] @relation("ClientCreator") // Clients created by this user

  @@map("users")
}

model Client {
  id                   Int      @id @default(autoincrement())
  logo                 String? // Logo image link
  name                 String // Business Name
  address              String?
  industry             String?
  slogan               String?
  links                String[] // Social media and website links
  coreProducts         String[] // Core products/services
  idealCustomers       String?
  brandEmotion         String? // Specific feeling or emotion brand wants to evoke
  uniqueProposition    String?
  whyChooseUs          String?
  mainGoal             String?
  shortTermGoal        String?
  longTermGoal         String?
  competitors          String[] // Direct competitors (links)
  indirectCompetitors  String[] // Indirect competitors (links)
  brandAssets          String[] // Brand assets links
  fontUsed             String[] // Array of fonts used
  smmDriveLink         String?
  contractDeliverables String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // Relations
  assignedUserId  Int? // Keep existing field
  assignedUser    User? @relation(fields: [assignedUserId], references: [id])
  assignedUserIds Int[] @default([]) // NEW: Array of all assigned SMM user IDs
  createdById     Int // User who created this client
  createdBy       User  @relation("ClientCreator", fields: [createdById], references: [id])

  @@map("clients")
}
